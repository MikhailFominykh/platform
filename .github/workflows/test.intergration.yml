#
# Интеграционный тест
#
# 1. Развертывание кластера в kubernetes
#   - собираем необходимые docker image
#   - развертыванием кластер на тестовом хостинге в DigitalOcean
#   - запускаем приложение для тестирования развернутых сервисов
#
name: Integration test
on:
  push:
    branches:
      - lain-dono
      - kviring
      - dependabot
jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - directory: auth/Cerberus
            image: cheetah-auth-cerberus
          - directory: auth/User
            image: cheetah-auth-user
          - directory: auth/Cookie
            image: cheetah-auth-cookie
          - directory: auth/Google
            image: cheetah-auth-google
          - directory: matches/Relay
            image: cheetah-matches-relay
          - directory: matches/StubMatchmaking
            image: cheetah-matches-stub-matchmaking
          - directory: matches/StubRegistry
            image: cheetah-matches-stub-registry
          - directory: matches/Factory
            image: cheetah-matches-factory
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ matrix.image }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ matrix.image }}-buildx-
      - name: Setup buildkit
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Login to docker.registry.cheetah.games
        uses: docker/login-action@v1
        with:
          registry: docker.registry.cheetah.games
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build docker image
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          push: true
          file: server/${{ matrix.directory }}/Dockerfile
          tags: docker.registry.cheetah.games/${{ matrix.image }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move buildkit cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#  test:
#    runs-on: ubuntu-latest
#    needs:
#      - build_images
#    # так как получение SSL сертификата для домена операция не быстрая
#    # то тестирование для разных pull request осуществляется на одном домене
#    # поэтому одновременный запуск данного action не возможен
#    concurrency: ci.cluster.dev.cheetah.games
#    # на всякий случай, иногда что-то в хостинге может пойти не по-плану
#    timeout-minutes: 10
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/cache@v2.1.6
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            hosting/E2ETest/target/
#          key: cargo-hosting-E2ETest-${{ github.sha }}
#          restore-keys: |
#            cargo-hosting-E2ETest-
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#      - name: Save DigitalOcean kubeconfig
#        run: |
#          doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}
#          sleep 10
#      - name: Set branch name
#        id: vars
#        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
#      - name: Prepare namespace
#        run: |
#          helm uninstall ${{ steps.vars.outputs.short_ref }} -n ${{ steps.vars.outputs.short_ref }} || true
#          kubectl delete --namespace ${{ steps.vars.outputs.short_ref }} --all deployments,statefulsets,services,pods,pvc,pv
#      - name: Deploy Release
#        run: |
#          cd hosting/charts/
#          find . -name Platform/values.yaml | xargs -I {} sed -i.bak 's/999.999.999/${{ github.sha }}/' {}
#          helm dependency update Platform
#          helm upgrade --debug --install ${{ steps.vars.outputs.short_ref }} \
#            --namespace=${{ steps.vars.outputs.short_ref }} \
#            Platform \
#            -f Platform/values-dev.yaml \
#            --set global.grpcDomain=${{ steps.vars.outputs.short_ref }}.cluster.dev.cheetah.games \
#            --wait=true
#          sleep 10
#      - name: Cleanup namespace
#        # удалять namespace нельзя, так как там есть сертификаты let encrypt
#        # поэтому удаляем релиз и все не нужные ресурсы
#        run: |
#          helm uninstall ${{ steps.vars.outputs.short_ref }} -n ${{ steps.vars.outputs.short_ref }}
#          kubectl delete --namespace ${{ steps.vars.outputs.short_ref }} --all deployments,statefulsets,services,pods,pvc,pv
