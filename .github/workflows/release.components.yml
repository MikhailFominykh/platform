name: Release unity package & docker images for components
on:
  release:
    types: [ published ]
jobs:
  publish-unity-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - games.cheetah.auth.authentication
          - games.cheetah.auth.android
          - games.cheetah.auth.cookie
          - games.cheetah.auth.cerberus
          - games.cheetah.platfrom
          - games.cheetah.matches.matchmaking
          - games.cheetah.matches.factory
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.3.0
        with:
          node-version: '12.x'
          registry-url: 'https://npm.registry.cheetah.games'
      - run: cd clients/Unity/Packages/ && sed -i.bak 's/999.999.999/${{ github.event.release.tag_name }}/' ${{ matrix.package}}/package.json
      - run: cd clients/Unity/Packages/ && npm publish ${{ matrix.package}} --access private
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REPOSITORY_CHEETAH_GAMES}}
  publish-docker-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - directory: auth/Cerberus
            image: cheetah-auth-cerberus
          - directory: auth/Authentication
            image: cheetah-auth-authentication
          - directory: matches/Relay
            image: cheetah-matches-relay
          - directory: matches/StubMatchmaking
            image: cheetah-matches-stub-matchmaking
          - directory: matches/StubRegistry
            image: cheetah-matches-stub-registry
          - directory: matches/Factory
            image: cheetah-matches-factory
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.6
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ matrix.image }}-buildx-${{ github.sha }}
          restore-keys: |
              ${{ matrix.image }}-buildx-
      - name: Setup buildkit
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Login to docker.registry.cheetah.games
        uses: docker/login-action@v1
        with:
          registry: docker.registry.cheetah.games
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build docker image
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          push: true
          file: server/${{ matrix.directory }}/Dockerfile
          tags: docker.registry.cheetah.games/${{ matrix.image }}:${{ github.event.release.tag_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move buildkit cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  publish-helm-chart:
    needs: publish-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish
        run: |
          find . -name Chart.yaml | xargs -I {} sed -i.bak 's/999.999.999/${{ github.event.release.tag_name }}/' {}
          find . -name values.yaml | xargs -I {} sed -i.bak 's/999.999.999/${{ github.event.release.tag_name }}/' {}
          cd hosting/charts/Platform
          helm dependency update .
          export HELM_EXPERIMENTAL_OCI=1
          helm registry login docker.registry.cheetah.games -u ${{ secrets.DOCKER_REGISTRY_USER }} -p ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          helm chart save . docker.registry.cheetah.games/platform:${{ github.event.release.tag_name }}
          helm chart push  docker.registry.cheetah.games/platform:${{ github.event.release.tag_name }}

