name: Release Relay

on:
  release:
    types: [published]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-macos-${{ hashFiles('**/Cargo.lock') }}
      - name: Build client & server
        run: cd components/relay/ && cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-build
          path: |
            components/relay/target/release/cheetah_relay
            components/relay/target/release/libcheetah_relay_client.dylib
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            components/relay/target
          key: cargo-linux-${{ hashFiles('**/Cargo.lock') }}
      - name: Build client & server
        run: cd components/relay/ && cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: |
            components/relay/target/release/cheetah_relay
            components/relay/target/release/libcheetah_relay_client.so
  build-android-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            components/relay/target
          key: cargo-android-windows-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cross
        run: cargo install --version 0.1.16 cross
      - name: Build windows (client & server)
        run: cd components/relay/ && cross build --target x86_64-pc-windows-gnu --release --message-format short
      - name: Build android (client)
        run: cd components/relay/ && cross build --manifest-path clients/Rust/Cargo.toml --target armv7-linux-androideabi --release --message-format short
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-windows-build
          path: |
            components/relay/target/x86_64-pc-windows-gnu/release/cheetah_relay.exe
            components/relay/target/x86_64-pc-windows-gnu/release/cheetah_relay_client.dll
            components/relay/target/armv7-linux-androideabi/release/libcheetah_relay_client.so

  publish-unity-package:
    runs-on: ubuntu-latest
    needs: [build-mac, build-linux, build-android-windows]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: macos-build
          path: macos-build
      - uses: actions/download-artifact@v2
        with:
          name: linux-build
          path: linux-build
      - uses: actions/download-artifact@v2
        with:
          name: android-windows-build
          path: android-windows-build
      - run: cp macos-build/cheetah_relay components/relay/clients/Unity/Packages/Cheetah\ Relay/Tests/Server/macos_relay
      - run: cp linux-build/cheetah_relay components/relay/clients/Unity/Packages/Cheetah\ Relay/Tests/Server/linux_relay
      - run: cp android-windows-build/x86_64-pc-windows-gnu/release/cheetah_relay.exe components/relay/clients/Unity/Packages/Cheetah\ Relay/Tests/Server/relay.exe
      - run: cp macos-build/libcheetah_relay_client.dylib components/relay/clients/Unity/Packages/Cheetah\ Relay/x86_64/libcheetah_relay_client.bundle
      - run: cp linux-build/libcheetah_relay_client.so components/relay/clients/Unity/Packages/Cheetah\ Relay/x86_64/libcheetah_relay_client.so
      - run: cp android-windows-build/x86_64-pc-windows-gnu/release/cheetah_relay_client.dll components/relay/clients/Unity/Packages/Cheetah\ Relay/x86_64/libcheetah_relay_client.dll
      - run: cp android-windows-build/armv7-linux-androideabi/release/libcheetah_relay_client.so components/relay/clients/Unity/Packages/Cheetah\ Relay/Android/libcheetah_relay_client.so
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.registry.cheetah.games'
      #- run: sed -i.bak 's/999.999.999/0.1.10/' components/relay/clients/Unity/Packages/Cheetah\ Relay/package.json
      - run: sed -i.bak 's/999.999.999/${{ github.event.release.tag_name }}/' components/relay/clients/Unity/Packages/Cheetah\ Relay/package.json
      - run: npm publish components/relay/clients/Unity/Packages/Cheetah\ Relay --access private
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REPOSITORY_CHEETAH_GAMES}}
