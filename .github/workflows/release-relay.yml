name: Release Relay

on:
  release:
    types: [ published ]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            server/relay/target
          key: cargo-macos-${{ hashFiles('**/Cargo.lock') }}
      - name: Build client & server
        run: cd server/relay/ && cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-build
          path: |
            server/relay/target/release/cheetah_relay
            server/relay/target/release/libcheetah_relay_client.dylib
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            server/relay/target
          key: cargo-linux-${{ hashFiles('**/Cargo.lock') }}
      - name: Build client & server
        run: cd server/relay/ && cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: |
            server/relay/target/release/cheetah_relay
            server/relay/target/release/libcheetah_relay_client.so
  build-android-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            server/relay/target
          key: cargo-android-windows-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cross
        run: cargo install --version 0.1.16 cross
      - name: Build windows (client & server)
        run: cd server/relay/ && cross build --target x86_64-pc-windows-gnu --release --message-format short
      - name: Build android armv7-linux-androideabi
        run: cd server/relay/ && cross build --manifest-path Client/Cargo.toml --target armv7-linux-androideabi --release --message-format short
      - name: Build android aarch64-linux-android
        run: cd server/relay/ && cross build --manifest-path Client/Cargo.toml --target aarch64-linux-android --release --message-format short
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-windows-build
          path: |
            server/relay/target/x86_64-pc-windows-gnu/release/cheetah_relay.exe
            server/relay/target/x86_64-pc-windows-gnu/release/cheetah_relay_client.dll
            server/relay/target/armv7-linux-androideabi/release/libcheetah_relay_client.so
            server/relay/target/aarch64-linux-android/release/libcheetah_relay_client.so


  publish-unity-package:
    runs-on: ubuntu-latest
    needs: [ build-mac, build-linux, build-android-windows ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: macos-build
          path: macos-build
      - uses: actions/download-artifact@v2
        with:
          name: linux-build
          path: linux-build
      - uses: actions/download-artifact@v2
        with:
          name: android-windows-build
          path: android-windows-build
      - run: cp macos-build/cheetah_relay clients/Unity/Packages/games.cheetah.relay/Tests/Server/macos_relay
      - run: cp linux-build/cheetah_relay clients/Unity/Packages/games.cheetah.relay/Tests/Server/linux_relay
      - run: cp android-windows-build/x86_64-pc-windows-gnu/release/cheetah_relay.exe clients/Unity/Packages/games.cheetah.relay/Tests/Server/relay.exe
      - run: cp macos-build/libcheetah_relay_client.dylib clients/Unity/Packages/games.cheetah.relay/x86_64/libcheetah_relay_client.bundle
      - run: cp linux-build/libcheetah_relay_client.so clients/Unity/Packages/games.cheetah.relay/x86_64/libcheetah_relay_client.so
      - run: cp android-windows-build/x86_64-pc-windows-gnu/release/cheetah_relay_client.dll clients/Unity/Packages/games.cheetah.relay/x86_64/libcheetah_relay_client.dll
      - run: cp android-windows-build/armv7-linux-androideabi/release/libcheetah_relay_client.so clients/Unity/Packages/games.cheetah.relay/Android/armv7/libcheetah_relay_client.so
      - run: cp android-windows-build/aarch64-linux-android/release/libcheetah_relay_client.so clients/Unity/Packages/games.cheetah.relay/Android/aarch64/libcheetah_relay_client.so
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '12.x'
          registry-url: 'https://npm.registry.cheetah.games'
      - run: sed -i.bak 's/999.999.999/${{ github.event.release.tag_name }}/' clients/Unity/Packages/games.cheetah.relay/package.json
      - run: npm publish clients/Unity/Packages/games.cheetah.relay/ --access private
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_REPOSITORY_CHEETAH_GAMES}}
