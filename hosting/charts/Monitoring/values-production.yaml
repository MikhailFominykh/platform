kube-prometheus-stack:
  kube-state-metrics:
    tolerations:
      - key: "type"
        value: "monitoring"
        operator: "Equal"
        effect: "NoSchedule"
    nodeSelector:
      type: "monitoring"
  prometheusOperator:
    admissionWebhooks:
      patch:
        tolerations:
          - key: "type"
            value: "monitoring"
            operator: "Equal"
            effect: "NoSchedule"
        nodeSelector:
          type: "monitoring"
    tolerations:
      - key: "type"
        value: "monitoring"
        operator: "Equal"
        effect: "NoSchedule"
    nodeSelector:
      type: "monitoring"
  prometheus:
    prometheusSpec:
      tolerations:
        - key: "type"
          value: "monitoring"
          operator: "Equal"
          effect: "NoSchedule"
      nodeSelector:
        type: "monitoring"
      podMonitorSelector:
        matchLabels:
          monitor: cheetah
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 50Gi
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: monitoring/prometheus-web-auth-secret
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
      ingressClassName: nginx
      pathType: ImplementationSpecific
      enabled: true
  grafana:
    tolerations:
      - key: "type"
        value: "monitoring"
        operator: "Equal"
        effect: "NoSchedule"
    nodeSelector:
      type: "monitoring"
    adminUser: admin
    persistence:
      enabled: true
      accessModes: [ "ReadWriteOnce" ]
      size: 10Gi
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      ingressClassName: nginx
      pathType: ImplementationSpecific
      enabled: true
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://monitoring-loki:3100
    sidecar:
      dashboards:
        enabled: true
  alertmanager:
    alertmanagerSpec:
      tolerations:
        - key: "type"
          value: "monitoring"
          operator: "Equal"
          effect: "NoSchedule"
      nodeSelector:
        type: "monitoring"
    enabled: true
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: monitoring/prometheus-web-auth-secret
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
      ingressClassName: nginx
      pathType: ImplementationSpecific
      enabled: true
loki:
  tolerations:
    - key: "type"
      value: "monitoring"
      operator: "Equal"
      effect: "NoSchedule"
  nodeSelector:
    type: "monitoring"
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 100Gi

