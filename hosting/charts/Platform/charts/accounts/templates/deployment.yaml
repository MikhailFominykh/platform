apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: {{ .Chart.Name }}
    spec:
      imagePullSecrets:
        - name: cheetahdockerregistry
      containers:
        - name: {{ .Chart.Name }}
          image: "docker.registry.cheetah.games/{{ .Chart.Name }}:{{ .Values.global.platformImageVersion }}"
          resources:
            limits:
              cpu: "1"
              memory: 40Mi
            requests:
              cpu: "0.5"
              memory: 20Mi
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5000"]
            initialDelaySeconds: 10
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: "JWT_PUBLIC_KEY"
              valueFrom:
                secretKeyRef:
                  name: jwt
                  key: public
            - name: "JWT_PRIVATE_KEY"
              valueFrom:
                secretKeyRef:
                  name: jwt
                  key: private
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}-postgresql"
                  key: user
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}-postgresql"
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}-postgresql"
                  key: password
            - name: POSTGRES_HOST
              value: "$(CHEETAH_ACCOUNTS_POSTGRESQL_SERVICE_HOST)"
            - name: POSTGRES_PORT
              value: "$(CHEETAH_ACCOUNTS_POSTGRESQL_SERVICE_PORT)"
            - name: "REDIS_HOST"
              value: "$(CHEETAH_ACCOUNTS_REDIS_MASTER_SERVICE_HOST)"
            - name: "REDIS_PORT"
              value: "$(CHEETAH_ACCOUNTS_REDIS_MASTER_SERVICE_PORT)"
            - name: "REDIS_AUTH"
              valueFrom:
                secretKeyRef:
                  name: cheetah-accounts-redis-password
                  key: password
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOKI_URL
              value: {{.Values.global.lokiUrl}}
