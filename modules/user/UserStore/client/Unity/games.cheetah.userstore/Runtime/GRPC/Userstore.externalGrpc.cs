// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: userstore.external.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cheetah.UserStore.GRPC {
  public static partial class Update
  {
    static readonly string __ServiceName = "cheetah.userstore.Update";

    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.SetDoubleRequest> __Marshaller_cheetah_userstore_SetDoubleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.SetDoubleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.UpdateReply> __Marshaller_cheetah_userstore_UpdateReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.UpdateReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.SetLongRequest> __Marshaller_cheetah_userstore_SetLongRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.SetLongRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.SetStringRequest> __Marshaller_cheetah_userstore_SetStringRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.SetStringRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply> __Method_SetDouble = new grpc::Method<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDouble",
        __Marshaller_cheetah_userstore_SetDoubleRequest,
        __Marshaller_cheetah_userstore_UpdateReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply> __Method_SetLong = new grpc::Method<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetLong",
        __Marshaller_cheetah_userstore_SetLongRequest,
        __Marshaller_cheetah_userstore_UpdateReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.SetStringRequest, global::Cheetah.UserStore.GRPC.UpdateReply> __Method_SetString = new grpc::Method<global::Cheetah.UserStore.GRPC.SetStringRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetString",
        __Marshaller_cheetah_userstore_SetStringRequest,
        __Marshaller_cheetah_userstore_UpdateReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply> __Method_IncrementDouble = new grpc::Method<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrementDouble",
        __Marshaller_cheetah_userstore_SetDoubleRequest,
        __Marshaller_cheetah_userstore_UpdateReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply> __Method_IncrementLong = new grpc::Method<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrementLong",
        __Marshaller_cheetah_userstore_SetLongRequest,
        __Marshaller_cheetah_userstore_UpdateReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Update</summary>
    [grpc::BindServiceMethod(typeof(Update), "BindService")]
    public abstract partial class UpdateBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.UpdateReply> SetDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.UpdateReply> SetLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.UpdateReply> SetString(global::Cheetah.UserStore.GRPC.SetStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Update</summary>
    public partial class UpdateClient : grpc::ClientBase<UpdateClient>
    {
      /// <summary>Creates a new client for Update</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UpdateClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Update that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UpdateClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UpdateClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UpdateClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDouble(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDouble, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetDoubleAsync(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDoubleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetDoubleAsync(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDouble, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetLong(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetLong, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetLongAsync(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetLongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetLongAsync(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetLong, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetString(global::Cheetah.UserStore.GRPC.SetStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply SetString(global::Cheetah.UserStore.GRPC.SetStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetString, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetStringAsync(global::Cheetah.UserStore.GRPC.SetStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> SetStringAsync(global::Cheetah.UserStore.GRPC.SetStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetString, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply IncrementDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementDouble(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply IncrementDouble(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrementDouble, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementDoubleAsync(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementDoubleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementDoubleAsync(global::Cheetah.UserStore.GRPC.SetDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrementDouble, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply IncrementLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementLong(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.UpdateReply IncrementLong(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrementLong, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementLongAsync(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementLongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.UpdateReply> IncrementLongAsync(global::Cheetah.UserStore.GRPC.SetLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrementLong, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UpdateClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UpdateClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UpdateBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SetDouble, serviceImpl.SetDouble)
          .AddMethod(__Method_SetLong, serviceImpl.SetLong)
          .AddMethod(__Method_SetString, serviceImpl.SetString)
          .AddMethod(__Method_IncrementDouble, serviceImpl.IncrementDouble)
          .AddMethod(__Method_IncrementLong, serviceImpl.IncrementLong).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UpdateBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SetDouble, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(serviceImpl.SetDouble));
      serviceBinder.AddMethod(__Method_SetLong, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(serviceImpl.SetLong));
      serviceBinder.AddMethod(__Method_SetString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.SetStringRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(serviceImpl.SetString));
      serviceBinder.AddMethod(__Method_IncrementDouble, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.SetDoubleRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(serviceImpl.IncrementDouble));
      serviceBinder.AddMethod(__Method_IncrementLong, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.SetLongRequest, global::Cheetah.UserStore.GRPC.UpdateReply>(serviceImpl.IncrementLong));
    }

  }
  public static partial class Fetch
  {
    static readonly string __ServiceName = "cheetah.userstore.Fetch";

    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchDoubleRequest> __Marshaller_cheetah_userstore_FetchDoubleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchDoubleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchDoubleReply> __Marshaller_cheetah_userstore_FetchDoubleReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchDoubleReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchLongRequest> __Marshaller_cheetah_userstore_FetchLongRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchLongRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchLongReply> __Marshaller_cheetah_userstore_FetchLongReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchLongReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchStringRequest> __Marshaller_cheetah_userstore_FetchStringRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchStringRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Cheetah.UserStore.GRPC.FetchStringReply> __Marshaller_cheetah_userstore_FetchStringReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Cheetah.UserStore.GRPC.FetchStringReply.Parser.ParseFrom);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.FetchDoubleRequest, global::Cheetah.UserStore.GRPC.FetchDoubleReply> __Method_Double = new grpc::Method<global::Cheetah.UserStore.GRPC.FetchDoubleRequest, global::Cheetah.UserStore.GRPC.FetchDoubleReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Double",
        __Marshaller_cheetah_userstore_FetchDoubleRequest,
        __Marshaller_cheetah_userstore_FetchDoubleReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.FetchLongRequest, global::Cheetah.UserStore.GRPC.FetchLongReply> __Method_Long = new grpc::Method<global::Cheetah.UserStore.GRPC.FetchLongRequest, global::Cheetah.UserStore.GRPC.FetchLongReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Long",
        __Marshaller_cheetah_userstore_FetchLongRequest,
        __Marshaller_cheetah_userstore_FetchLongReply);

    static readonly grpc::Method<global::Cheetah.UserStore.GRPC.FetchStringRequest, global::Cheetah.UserStore.GRPC.FetchStringReply> __Method_String = new grpc::Method<global::Cheetah.UserStore.GRPC.FetchStringRequest, global::Cheetah.UserStore.GRPC.FetchStringReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "String",
        __Marshaller_cheetah_userstore_FetchStringRequest,
        __Marshaller_cheetah_userstore_FetchStringReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of Fetch</summary>
    [grpc::BindServiceMethod(typeof(Fetch), "BindService")]
    public abstract partial class FetchBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.FetchDoubleReply> Double(global::Cheetah.UserStore.GRPC.FetchDoubleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.FetchLongReply> Long(global::Cheetah.UserStore.GRPC.FetchLongRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Cheetah.UserStore.GRPC.FetchStringReply> String(global::Cheetah.UserStore.GRPC.FetchStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Fetch</summary>
    public partial class FetchClient : grpc::ClientBase<FetchClient>
    {
      /// <summary>Creates a new client for Fetch</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FetchClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Fetch that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FetchClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FetchClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FetchClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Cheetah.UserStore.GRPC.FetchDoubleReply Double(global::Cheetah.UserStore.GRPC.FetchDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Double(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.FetchDoubleReply Double(global::Cheetah.UserStore.GRPC.FetchDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Double, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchDoubleReply> DoubleAsync(global::Cheetah.UserStore.GRPC.FetchDoubleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoubleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchDoubleReply> DoubleAsync(global::Cheetah.UserStore.GRPC.FetchDoubleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Double, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.FetchLongReply Long(global::Cheetah.UserStore.GRPC.FetchLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Long(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.FetchLongReply Long(global::Cheetah.UserStore.GRPC.FetchLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Long, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchLongReply> LongAsync(global::Cheetah.UserStore.GRPC.FetchLongRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchLongReply> LongAsync(global::Cheetah.UserStore.GRPC.FetchLongRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Long, null, options, request);
      }
      public virtual global::Cheetah.UserStore.GRPC.FetchStringReply String(global::Cheetah.UserStore.GRPC.FetchStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return String(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Cheetah.UserStore.GRPC.FetchStringReply String(global::Cheetah.UserStore.GRPC.FetchStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_String, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchStringReply> StringAsync(global::Cheetah.UserStore.GRPC.FetchStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Cheetah.UserStore.GRPC.FetchStringReply> StringAsync(global::Cheetah.UserStore.GRPC.FetchStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_String, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FetchClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FetchClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FetchBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Double, serviceImpl.Double)
          .AddMethod(__Method_Long, serviceImpl.Long)
          .AddMethod(__Method_String, serviceImpl.String).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FetchBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Double, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.FetchDoubleRequest, global::Cheetah.UserStore.GRPC.FetchDoubleReply>(serviceImpl.Double));
      serviceBinder.AddMethod(__Method_Long, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.FetchLongRequest, global::Cheetah.UserStore.GRPC.FetchLongReply>(serviceImpl.Long));
      serviceBinder.AddMethod(__Method_String, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.UserStore.GRPC.FetchStringRequest, global::Cheetah.UserStore.GRPC.FetchStringReply>(serviceImpl.String));
    }

  }
}
#endregion
