// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: userstore.external.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cheetah.UserStore.GRPC {

  /// <summary>Holder for reflection information generated from userstore.external.proto</summary>
  public static partial class UserstoreExternalReflection {

    #region Descriptor
    /// <summary>File descriptor for userstore.external.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserstoreExternalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chh1c2Vyc3RvcmUuZXh0ZXJuYWwucHJvdG8SEWNoZWV0YWgudXNlcnN0b3Jl",
            "IjQKEFNldERvdWJsZVJlcXVlc3QSEQoJZmllbGROYW1lGAEgASgJEg0KBXZh",
            "bHVlGAIgASgBIjIKDlNldExvbmdSZXF1ZXN0EhEKCWZpZWxkTmFtZRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoEiI0ChBTZXRTdHJpbmdSZXF1ZXN0EhEKCWZpZWxk",
            "TmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEoCSI4CgtVcGRhdGVSZXBseRIpCgZz",
            "dGF0dXMYASABKA4yGS5jaGVldGFoLnVzZXJzdG9yZS5TdGF0dXMiJwoSRmV0",
            "Y2hEb3VibGVSZXF1ZXN0EhEKCWZpZWxkTmFtZRgBIAEoCSIlChBGZXRjaExv",
            "bmdSZXF1ZXN0EhEKCWZpZWxkTmFtZRgBIAEoCSInChJGZXRjaFN0cmluZ1Jl",
            "cXVlc3QSEQoJZmllbGROYW1lGAEgASgJIloKEEZldGNoRG91YmxlUmVwbHkS",
            "KwoGc3RhdHVzGAEgASgOMhkuY2hlZXRhaC51c2Vyc3RvcmUuU3RhdHVzSAAS",
            "DwoFdmFsdWUYAiABKAFIAEIICgZyZXN1bHQiWAoORmV0Y2hMb25nUmVwbHkS",
            "KwoGc3RhdHVzGAEgASgOMhkuY2hlZXRhaC51c2Vyc3RvcmUuU3RhdHVzSAAS",
            "DwoFdmFsdWUYAiABKBJIAEIICgZyZXN1bHQiWgoQRmV0Y2hTdHJpbmdSZXBs",
            "eRIrCgZzdGF0dXMYASABKA4yGS5jaGVldGFoLnVzZXJzdG9yZS5TdGF0dXNI",
            "ABIPCgV2YWx1ZRgCIAEoCUgAQggKBnJlc3VsdCo5CgZTdGF0dXMSBgoCT0sQ",
            "ABITCg9GSUVMRF9OT1RfRk9VTkQQARISCg5JTlRFUk5BTF9FUlJPUhACMqYD",
            "CgZVcGRhdGUSUAoJU2V0RG91YmxlEiMuY2hlZXRhaC51c2Vyc3RvcmUuU2V0",
            "RG91YmxlUmVxdWVzdBoeLmNoZWV0YWgudXNlcnN0b3JlLlVwZGF0ZVJlcGx5",
            "EkwKB1NldExvbmcSIS5jaGVldGFoLnVzZXJzdG9yZS5TZXRMb25nUmVxdWVz",
            "dBoeLmNoZWV0YWgudXNlcnN0b3JlLlVwZGF0ZVJlcGx5ElAKCVNldFN0cmlu",
            "ZxIjLmNoZWV0YWgudXNlcnN0b3JlLlNldFN0cmluZ1JlcXVlc3QaHi5jaGVl",
            "dGFoLnVzZXJzdG9yZS5VcGRhdGVSZXBseRJWCg9JbmNyZW1lbnREb3VibGUS",
            "Iy5jaGVldGFoLnVzZXJzdG9yZS5TZXREb3VibGVSZXF1ZXN0Gh4uY2hlZXRh",
            "aC51c2Vyc3RvcmUuVXBkYXRlUmVwbHkSUgoNSW5jcmVtZW50TG9uZxIhLmNo",
            "ZWV0YWgudXNlcnN0b3JlLlNldExvbmdSZXF1ZXN0Gh4uY2hlZXRhaC51c2Vy",
            "c3RvcmUuVXBkYXRlUmVwbHkygwIKBUZldGNoElQKBkRvdWJsZRIlLmNoZWV0",
            "YWgudXNlcnN0b3JlLkZldGNoRG91YmxlUmVxdWVzdBojLmNoZWV0YWgudXNl",
            "cnN0b3JlLkZldGNoRG91YmxlUmVwbHkSTgoETG9uZxIjLmNoZWV0YWgudXNl",
            "cnN0b3JlLkZldGNoTG9uZ1JlcXVlc3QaIS5jaGVldGFoLnVzZXJzdG9yZS5G",
            "ZXRjaExvbmdSZXBseRJUCgZTdHJpbmcSJS5jaGVldGFoLnVzZXJzdG9yZS5G",
            "ZXRjaFN0cmluZ1JlcXVlc3QaIy5jaGVldGFoLnVzZXJzdG9yZS5GZXRjaFN0",
            "cmluZ1JlcGx5QhmqAhZDaGVldGFoLlVzZXJTdG9yZS5HUlBDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cheetah.UserStore.GRPC.Status), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.SetDoubleRequest), global::Cheetah.UserStore.GRPC.SetDoubleRequest.Parser, new[]{ "FieldName", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.SetLongRequest), global::Cheetah.UserStore.GRPC.SetLongRequest.Parser, new[]{ "FieldName", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.SetStringRequest), global::Cheetah.UserStore.GRPC.SetStringRequest.Parser, new[]{ "FieldName", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.UpdateReply), global::Cheetah.UserStore.GRPC.UpdateReply.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchDoubleRequest), global::Cheetah.UserStore.GRPC.FetchDoubleRequest.Parser, new[]{ "FieldName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchLongRequest), global::Cheetah.UserStore.GRPC.FetchLongRequest.Parser, new[]{ "FieldName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchStringRequest), global::Cheetah.UserStore.GRPC.FetchStringRequest.Parser, new[]{ "FieldName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchDoubleReply), global::Cheetah.UserStore.GRPC.FetchDoubleReply.Parser, new[]{ "Status", "Value" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchLongReply), global::Cheetah.UserStore.GRPC.FetchLongReply.Parser, new[]{ "Status", "Value" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.UserStore.GRPC.FetchStringReply), global::Cheetah.UserStore.GRPC.FetchStringReply.Parser, new[]{ "Status", "Value" }, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    [pbr::OriginalName("OK")] Ok = 0,
    [pbr::OriginalName("FIELD_NOT_FOUND")] FieldNotFound = 1,
    [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
  }

  #endregion

  #region Messages
  public sealed partial class SetDoubleRequest : pb::IMessage<SetDoubleRequest> {
    private static readonly pb::MessageParser<SetDoubleRequest> _parser = new pb::MessageParser<SetDoubleRequest>(() => new SetDoubleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetDoubleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetDoubleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetDoubleRequest(SetDoubleRequest other) : this() {
      fieldName_ = other.fieldName_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetDoubleRequest Clone() {
      return new SetDoubleRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetDoubleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetDoubleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetDoubleRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetLongRequest : pb::IMessage<SetLongRequest> {
    private static readonly pb::MessageParser<SetLongRequest> _parser = new pb::MessageParser<SetLongRequest>(() => new SetLongRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLongRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLongRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLongRequest(SetLongRequest other) : this() {
      fieldName_ = other.fieldName_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLongRequest Clone() {
      return new SetLongRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLongRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLongRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (Value != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLongRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetStringRequest : pb::IMessage<SetStringRequest> {
    private static readonly pb::MessageParser<SetStringRequest> _parser = new pb::MessageParser<SetStringRequest>(() => new SetStringRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetStringRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStringRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStringRequest(SetStringRequest other) : this() {
      fieldName_ = other.fieldName_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStringRequest Clone() {
      return new SetStringRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetStringRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetStringRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetStringRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateReply : pb::IMessage<UpdateReply> {
    private static readonly pb::MessageParser<UpdateReply> _parser = new pb::MessageParser<UpdateReply>(() => new UpdateReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReply(UpdateReply other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReply Clone() {
      return new UpdateReply(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Cheetah.UserStore.GRPC.Status status_ = global::Cheetah.UserStore.GRPC.Status.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cheetah.UserStore.GRPC.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Cheetah.UserStore.GRPC.Status.Ok) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Cheetah.UserStore.GRPC.Status.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Cheetah.UserStore.GRPC.Status.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateReply other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Cheetah.UserStore.GRPC.Status.Ok) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Cheetah.UserStore.GRPC.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchDoubleRequest : pb::IMessage<FetchDoubleRequest> {
    private static readonly pb::MessageParser<FetchDoubleRequest> _parser = new pb::MessageParser<FetchDoubleRequest>(() => new FetchDoubleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchDoubleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleRequest(FetchDoubleRequest other) : this() {
      fieldName_ = other.fieldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleRequest Clone() {
      return new FetchDoubleRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchDoubleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchDoubleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchDoubleRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchLongRequest : pb::IMessage<FetchLongRequest> {
    private static readonly pb::MessageParser<FetchLongRequest> _parser = new pb::MessageParser<FetchLongRequest>(() => new FetchLongRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchLongRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongRequest(FetchLongRequest other) : this() {
      fieldName_ = other.fieldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongRequest Clone() {
      return new FetchLongRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchLongRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchLongRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchLongRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchStringRequest : pb::IMessage<FetchStringRequest> {
    private static readonly pb::MessageParser<FetchStringRequest> _parser = new pb::MessageParser<FetchStringRequest>(() => new FetchStringRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchStringRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringRequest(FetchStringRequest other) : this() {
      fieldName_ = other.fieldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringRequest Clone() {
      return new FetchStringRequest(this);
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchStringRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchStringRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchStringRequest other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchDoubleReply : pb::IMessage<FetchDoubleReply> {
    private static readonly pb::MessageParser<FetchDoubleReply> _parser = new pb::MessageParser<FetchDoubleReply>(() => new FetchDoubleReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchDoubleReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleReply(FetchDoubleReply other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchDoubleReply Clone() {
      return new FetchDoubleReply(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cheetah.UserStore.GRPC.Status Status {
      get { return resultCase_ == ResultOneofCase.Status ? (global::Cheetah.UserStore.GRPC.Status) result_ : global::Cheetah.UserStore.GRPC.Status.Ok; }
      set {
        result_ = value;
        resultCase_ = ResultOneofCase.Status;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return resultCase_ == ResultOneofCase.Value ? (double) result_ : 0D; }
      set {
        result_ = value;
        resultCase_ = ResultOneofCase.Value;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Status = 1,
      Value = 2,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchDoubleReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchDoubleReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Status) hash ^= Status.GetHashCode();
      if (resultCase_ == ResultOneofCase.Value) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultCase_ == ResultOneofCase.Status) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchDoubleReply other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = input.ReadEnum();
            resultCase_ = ResultOneofCase.Status;
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchLongReply : pb::IMessage<FetchLongReply> {
    private static readonly pb::MessageParser<FetchLongReply> _parser = new pb::MessageParser<FetchLongReply>(() => new FetchLongReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchLongReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongReply(FetchLongReply other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchLongReply Clone() {
      return new FetchLongReply(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cheetah.UserStore.GRPC.Status Status {
      get { return resultCase_ == ResultOneofCase.Status ? (global::Cheetah.UserStore.GRPC.Status) result_ : global::Cheetah.UserStore.GRPC.Status.Ok; }
      set {
        result_ = value;
        resultCase_ = ResultOneofCase.Status;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return resultCase_ == ResultOneofCase.Value ? (long) result_ : 0L; }
      set {
        result_ = value;
        resultCase_ = ResultOneofCase.Value;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Status = 1,
      Value = 2,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchLongReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchLongReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Value != other.Value) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Status) hash ^= Status.GetHashCode();
      if (resultCase_ == ResultOneofCase.Value) hash ^= Value.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultCase_ == ResultOneofCase.Status) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        output.WriteRawTag(16);
        output.WriteSInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchLongReply other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = input.ReadEnum();
            resultCase_ = ResultOneofCase.Status;
            break;
          }
          case 16: {
            Value = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchStringReply : pb::IMessage<FetchStringReply> {
    private static readonly pb::MessageParser<FetchStringReply> _parser = new pb::MessageParser<FetchStringReply>(() => new FetchStringReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchStringReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.UserStore.GRPC.UserstoreExternalReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringReply(FetchStringReply other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchStringReply Clone() {
      return new FetchStringReply(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cheetah.UserStore.GRPC.Status Status {
      get { return resultCase_ == ResultOneofCase.Status ? (global::Cheetah.UserStore.GRPC.Status) result_ : global::Cheetah.UserStore.GRPC.Status.Ok; }
      set {
        result_ = value;
        resultCase_ = ResultOneofCase.Status;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return resultCase_ == ResultOneofCase.Value ? (string) result_ : ""; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resultCase_ = ResultOneofCase.Value;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Status = 1,
      Value = 2,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchStringReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchStringReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Value != other.Value) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Status) hash ^= Status.GetHashCode();
      if (resultCase_ == ResultOneofCase.Value) hash ^= Value.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultCase_ == ResultOneofCase.Status) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchStringReply other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Status:
          Status = other.Status;
          break;
        case ResultOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = input.ReadEnum();
            resultCase_ = ResultOneofCase.Status;
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
