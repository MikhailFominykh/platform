// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: system.compatibility.external.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cheetah.System.Compatibility.GRPC {

  /// <summary>Holder for reflection information generated from system.compatibility.external.proto</summary>
  public static partial class SystemCompatibilityExternalReflection {

    #region Descriptor
    /// <summary>File descriptor for system.compatibility.external.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SystemCompatibilityExternalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNzeXN0ZW0uY29tcGF0aWJpbGl0eS5leHRlcm5hbC5wcm90bxIcY2hlZXRh",
            "aC5zeXN0ZW0uY29tcGF0aWJpbGl0eSIsChlDaGVja0NvbXBhdGliaWxpdHlS",
            "ZXF1ZXN0Eg8KB3ZlcnNpb24YASABKAki2wEKGkNoZWNrQ29tcGF0aWJpbGl0",
            "eVJlc3BvbnNlEk8KBnN0YXR1cxgBIAEoDjI/LmNoZWV0YWguc3lzdGVtLmNv",
            "bXBhdGliaWxpdHkuQ2hlY2tDb21wYXRpYmlsaXR5UmVzcG9uc2UuU3RhdHVz",
            "ImwKBlN0YXR1cxINCglTdXBwb3J0ZWQQABIlCiFQbGFubmluZ1Vuc3VwcG9y",
            "dGVkQWZ0ZXJTb21lSG91cnMQARIbChdQbGFubmluZ1Vuc3VwcG9ydGVkU29v",
            "bhACEg8KC1Vuc3VwcG9ydGVkEAMyoAEKFENvbXBhdGliaWxpdHlDaGVja2Vy",
            "EocBChJDaGVja0NvbXBhdGliaWxpdHkSNy5jaGVldGFoLnN5c3RlbS5jb21w",
            "YXRpYmlsaXR5LkNoZWNrQ29tcGF0aWJpbGl0eVJlcXVlc3QaOC5jaGVldGFo",
            "LnN5c3RlbS5jb21wYXRpYmlsaXR5LkNoZWNrQ29tcGF0aWJpbGl0eVJlc3Bv",
            "bnNlQiSqAiFDaGVldGFoLlN5c3RlbS5Db21wYXRpYmlsaXR5LkdSUENiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityRequest), global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityRequest.Parser, new[]{ "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse), global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Parser, new[]{ "Status" }, null, new[]{ typeof(global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CheckCompatibilityRequest : pb::IMessage<CheckCompatibilityRequest> {
    private static readonly pb::MessageParser<CheckCompatibilityRequest> _parser = new pb::MessageParser<CheckCompatibilityRequest>(() => new CheckCompatibilityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckCompatibilityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.System.Compatibility.GRPC.SystemCompatibilityExternalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityRequest(CheckCompatibilityRequest other) : this() {
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityRequest Clone() {
      return new CheckCompatibilityRequest(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckCompatibilityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckCompatibilityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckCompatibilityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckCompatibilityResponse : pb::IMessage<CheckCompatibilityResponse> {
    private static readonly pb::MessageParser<CheckCompatibilityResponse> _parser = new pb::MessageParser<CheckCompatibilityResponse>(() => new CheckCompatibilityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckCompatibilityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cheetah.System.Compatibility.GRPC.SystemCompatibilityExternalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityResponse(CheckCompatibilityResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCompatibilityResponse Clone() {
      return new CheckCompatibilityResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status status_ = global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status.Supported;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckCompatibilityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckCompatibilityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status.Supported) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status.Supported) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status.Supported) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckCompatibilityResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status.Supported) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Cheetah.System.Compatibility.GRPC.CheckCompatibilityResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CheckCompatibilityResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        ///*
        ///Версия клиента поддерживается, в обновлении нет необходимости
        /// </summary>
        [pbr::OriginalName("Supported")] Supported = 0,
        /// <summary>
        ///*
        ///Планируется окончания поддержки - за 4-24 часа до окончания
        /// </summary>
        [pbr::OriginalName("PlanningUnsupportedAfterSomeHours")] PlanningUnsupportedAfterSomeHours = 1,
        /// <summary>
        ///*
        ///Планируется окончания поддержки - за 0-4 часа до окончания
        /// </summary>
        [pbr::OriginalName("PlanningUnsupportedSoon")] PlanningUnsupportedSoon = 2,
        /// <summary>
        ///*
        ///Данная версия клиента не поддерживается, если в это время клиент в битве - необходимо обновить клиент после
        ///окончания битвы, если клиент только что запущен или в процессе запуска - необходимо принудительное обновление
        /// </summary>
        [pbr::OriginalName("Unsupported")] Unsupported = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
