// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cookie.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Games.Cheetah.Auth.External.Cookie {

  /// <summary>Holder for reflection information generated from cookie.proto</summary>
  public static partial class CookieReflection {

    #region Descriptor
    /// <summary>File descriptor for cookie.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CookieReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb29raWUucHJvdG8SImdhbWVzLmNoZWV0YWguYXV0aC5leHRlcm5hbC5j",
            "b29raWUaFGNlcmJlcnVzLnR5cGVzLnByb3RvIiQKD1JlZ2lzdHJ5UmVxdWVz",
            "dBIRCglkZXZpY2VfaWQYASABKAkiWAoQUmVnaXN0cnlSZXNwb25zZRI0CgZ0",
            "b2tlbnMYASABKAsyJC5nYW1lcy5jaGVldGFoLmNlcmJlcnVzLnR5cGVzLlRv",
            "a2VucxIOCgZjb29raWUYAiABKAkiMQoMTG9naW5SZXF1ZXN0Eg4KBmNvb2tp",
            "ZRgBIAEoCRIRCglkZXZpY2VfaWQYAiABKAkitwEKDUxvZ2luUmVzcG9uc2US",
            "NAoGdG9rZW5zGAEgASgLMiQuZ2FtZXMuY2hlZXRhaC5jZXJiZXJ1cy50eXBl",
            "cy5Ub2tlbnMSSAoGc3RhdHVzGAIgASgOMjguZ2FtZXMuY2hlZXRhaC5hdXRo",
            "LmV4dGVybmFsLmNvb2tpZS5Mb2dpblJlc3BvbnNlLlN0YXR1cyImCgZTdGF0",
            "dXMSBgoCT0sQABIUChBDT09LSUVfTk9UX0ZPVU5EEAEy/QEKBkNvb2tpZRJ9",
            "ChBSZWdpc3RyeUJ5Q29va2llEjMuZ2FtZXMuY2hlZXRhaC5hdXRoLmV4dGVy",
            "bmFsLmNvb2tpZS5SZWdpc3RyeVJlcXVlc3QaNC5nYW1lcy5jaGVldGFoLmF1",
            "dGguZXh0ZXJuYWwuY29va2llLlJlZ2lzdHJ5UmVzcG9uc2USdAoNTG9naW5C",
            "eUNvb2tpZRIwLmdhbWVzLmNoZWV0YWguYXV0aC5leHRlcm5hbC5jb29raWUu",
            "TG9naW5SZXF1ZXN0GjEuZ2FtZXMuY2hlZXRhaC5hdXRoLmV4dGVybmFsLmNv",
            "b2tpZS5Mb2dpblJlc3BvbnNlUABiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Games.Cheetah.Cerberus.Types.CerberusTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Games.Cheetah.Auth.External.Cookie.RegistryRequest), global::Games.Cheetah.Auth.External.Cookie.RegistryRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Games.Cheetah.Auth.External.Cookie.RegistryResponse), global::Games.Cheetah.Auth.External.Cookie.RegistryResponse.Parser, new[]{ "Tokens", "Cookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Games.Cheetah.Auth.External.Cookie.LoginRequest), global::Games.Cheetah.Auth.External.Cookie.LoginRequest.Parser, new[]{ "Cookie", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Games.Cheetah.Auth.External.Cookie.LoginResponse), global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Parser, new[]{ "Tokens", "Status" }, null, new[]{ typeof(global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegistryRequest : pb::IMessage<RegistryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistryRequest> _parser = new pb::MessageParser<RegistryRequest>(() => new RegistryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Games.Cheetah.Auth.External.Cookie.CookieReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryRequest(RegistryRequest other) : this() {
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryRequest Clone() {
      return new RegistryRequest(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistryRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegistryResponse : pb::IMessage<RegistryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistryResponse> _parser = new pb::MessageParser<RegistryResponse>(() => new RegistryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Games.Cheetah.Auth.External.Cookie.CookieReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryResponse(RegistryResponse other) : this() {
      tokens_ = other.tokens_ != null ? other.tokens_.Clone() : null;
      cookie_ = other.cookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryResponse Clone() {
      return new RegistryResponse(this);
    }

    /// <summary>Field number for the "tokens" field.</summary>
    public const int TokensFieldNumber = 1;
    private global::Games.Cheetah.Cerberus.Types.Tokens tokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Games.Cheetah.Cerberus.Types.Tokens Tokens {
      get { return tokens_; }
      set {
        tokens_ = value;
      }
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 2;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tokens, other.Tokens)) return false;
      if (Cookie != other.Cookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokens_ != null) hash ^= Tokens.GetHashCode();
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tokens_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tokens);
      }
      if (Cookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tokens_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tokens);
      }
      if (Cookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokens_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tokens);
      }
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistryResponse other) {
      if (other == null) {
        return;
      }
      if (other.tokens_ != null) {
        if (tokens_ == null) {
          Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
        }
        Tokens.MergeFrom(other.Tokens);
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokens_ == null) {
              Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
            }
            input.ReadMessage(Tokens);
            break;
          }
          case 18: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tokens_ == null) {
              Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
            }
            input.ReadMessage(Tokens);
            break;
          }
          case 18: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Games.Cheetah.Auth.External.Cookie.CookieReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      cookie_ = other.cookie_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 1;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cookie != other.Cookie) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cookie);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cookie);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cookie = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Cookie = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Games.Cheetah.Auth.External.Cookie.CookieReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      tokens_ = other.tokens_ != null ? other.tokens_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "tokens" field.</summary>
    public const int TokensFieldNumber = 1;
    private global::Games.Cheetah.Cerberus.Types.Tokens tokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Games.Cheetah.Cerberus.Types.Tokens Tokens {
      get { return tokens_; }
      set {
        tokens_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status status_ = global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tokens, other.Tokens)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokens_ != null) hash ^= Tokens.GetHashCode();
      if (Status != global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tokens_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tokens);
      }
      if (Status != global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tokens_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tokens);
      }
      if (Status != global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokens_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tokens);
      }
      if (Status != global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.tokens_ != null) {
        if (tokens_ == null) {
          Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
        }
        Tokens.MergeFrom(other.Tokens);
      }
      if (other.Status != global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status.Ok) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokens_ == null) {
              Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
            }
            input.ReadMessage(Tokens);
            break;
          }
          case 16: {
            Status = (global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tokens_ == null) {
              Tokens = new global::Games.Cheetah.Cerberus.Types.Tokens();
            }
            input.ReadMessage(Tokens);
            break;
          }
          case 16: {
            Status = (global::Games.Cheetah.Auth.External.Cookie.LoginResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LoginResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("COOKIE_NOT_FOUND")] CookieNotFound = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
